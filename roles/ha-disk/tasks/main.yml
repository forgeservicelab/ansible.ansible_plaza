---
- name: Partition the data disk
  shell: 'echo "n\np\n1\n\n+150M\nn\np\n2\n\n\nt\n2\n8e\nw" | fdisk {{ block_device }}'
  when: "not ansible_devices.{{ block_device.split('/')[2] }}.partitions"

- name: Install LVM
  apt:
    pkg=lvm2
    state=present

- name: Setup the LVM Volume Group
  lvg:
    vg=data
    pvs="{{ block_device }}2"

- name: Setup the LV Logical Volume
  lvol:
    vg=data
    lv="{{ group_names[0] }}"
    size=100%VG

- name: Format the Logical Volume
  filesystem:
    fstype=ext4
    dev="/dev/data/{{ group_names[0] }}"

- name: Is metadata partition zeroed out?
  script: "../scripts/isheadzero.sh -d {{ block_device}}1 -s 128"
  register: headzero
  failed_when: "0 != headzero.rc and 1 != headzero.rc"
  changed_when: False

- name: Zero-out the head of the metadata partition
  shell: "dd if=/dev/zero of={{ block_device }}1 bs=1M count=128"
  when: not headzero.rc

- name: Install DRBD
  apt:
    pkg=drbd8-utils
    state=present

- name: Configure DRBD
  template:
    src=../templates/drbd.j2
    dest=/etc/drbd.conf
    owner=root
    group=root
    mode=0644

- name: Install the drbd module
  modprobe:
    name=drbd
    state=present

- name: Is DRBD initialized?
  shell: "drbdmeta /dev/drbd0 v06 0 dstate"
  register: configured
  failed_when: "255 != configured.rc and 20 != configured.rc"
  changed_when: False

- name: Initialize the DRBD metadata if needed
  shell: "echo yes | drbdadm create-md {{ group_names[0] }}"
  when: "255 == configured.rc"
  notify: restart drbd

- meta: flush_handlers

- name: Invalidate DRBD on secondary node
  shell: "drbdadm invalidate {{ group_names[0] }}"
  when: "primary is not defined"
  register: invalidated
  # Don't fail on 'already syncing invalidation error'
  failed_when: "11 != invalidated.rc and 0 != invalidated.rc" 
  changed_when: "11 != invalidated.rc"
  notify: restart drbd

- name: Set DRBD primary
  shell: "drbdadm primary {{ group_names[0] }}"
  when: "primary is defined"
  register: primaryset
  failed_when: "11 != primaryset.rc and 0 != primaryset.rc"
  changed_when: "0 != primaryset.rc"
  notify: restart drbd

- name: Install Heartbeat
  apt:
    pkg=heartbeat
    state=present

- name: Install Python development package
  apt:
    name=python-dev
    state=present

- name: Install PIP package manager
  apt:
    name=python-pip
    state=present

- name: Install NovaClient
  pip:
    name=python-novaclient
    state=present

- name: Install Heartbeat OpenStack script
  copy:
    src=../scripts/FloatingIP
    dest=/usr/lib/ocf/resource.d/heartbeat/FloatingIP
    owner=root
    group=root
    mode=0755

- name: Install Heartbeat OpenStack wrapper script
  copy:
    src=../scripts/FloatingIP-wrapper
    dest=/etc/heartbeat/resource.d/FloatingIP
    owner=root
    group=root
    mode=0755

- name: Create the OpenStack configuration directory
  file:
    path=/etc/openstack
    state=directory
    owner=root
    group=root

- name: Install OpenStack configuration file
  template:
    src=../templates/nova.conf.j2
    dest=/etc/openstack/nova.conf
    owner=root
    group=root
    mode=0600
  notify: restart heartbeat

- name: Configure Heartbeat
  template:
    src=../templates/hb_ha.cf.j2
    dest=/etc/heartbeat/ha.cf
    owner=root
    group=root
    mode=0640
  notify: restart heartbeat

- name: Configure Heartbeat Resources
  template:
    src=../templates/hb_haresources.j2
    dest=/etc/heartbeat/haresources
    owner=root
    group=root
    mode=0640
  notify: restart heartbeat

- name: Configure Heartbeat Auth
  template:
    src=../templates/hb_authkeys.j2
    dest=/etc/heartbeat/authkeys
    owner=root
    group=root
    mode=0600
  notify: restart heartbeat
